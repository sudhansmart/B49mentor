Do the below programs in anonymous function & IIFE
Print odd numbers in an array
anonymous function:-
const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];

const printOddNumbers = function(arr) {
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] % 2 !== 0) {
      console.log(arr[i]);
    }
  }
};

printOddNumbers(numbers);

 IIFE:-
const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];

(function(arr) {
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] % 2 !== 0) {
      console.log(arr[i]);
    }
  }
})(numbers);

b)Convert all the strings to title caps in a string array

anonymous function:-

const stringArray = ["hello world", "good morning", "happy coding"];

const convertToTitleCaps = function(arr) {
  const titleCapsArray = arr.map(function(str) {
    return str.split(" ").map(function(word) {
      return word.charAt(0).toUpperCase() + word.slice(1);
    }).join(" ");
  });
  
  return titleCapsArray;
};

const result = convertToTitleCaps(stringArray);
console.log(result);


IIFE :-

const stringArray = ["hello world", "good morning", "happy coding"];

(function(arr) {
  const titleCapsArray = arr.map(function(str) {
    return str.split(" ").map(function(word) {
      return word.charAt(0).toUpperCase() + word.slice(1);
    }).join(" ");
  });
  
  console.log(titleCapsArray);
})(stringArray);

3),Sum of all numbers in an array
anonymous function:-

const numbers = [1, 2, 3, 4, 5];

const calculateSum = function(arr) {
  let sum = 0;
  for (let i = 0; i < arr.length; i++) {
    sum += arr[i];
  }
  return sum;
};

const result = calculateSum(numbers);
console.log(result);

IIFE:-
const numbers = [1, 2, 3, 4, 5];

(function(arr) {
  let sum = 0;
  for (let i = 0; i < arr.length; i++) {
    sum += arr[i];
  }
  console.log(sum);
})(numbers);
4),Return all the prime numbers in an array
anonymous function:-
const numbers = [2, 3, 4, 5, 6, 7, 8, 9];

const getPrimeNumbers = function(arr) {
  const primes = arr.filter(function(number) {
    if (number < 2) {
      return false;
    }
    for (let i = 2; i < number; i++) {
      if (number % i === 0) {
        return false;
      }
    }
    return true;
  });

  return primes;
};

const result = getPrimeNumbers(numbers);
console.log(result);

IIFE:-
const numbers = [2, 3, 4, 5, 6, 7, 8, 9];

(function(arr) {
  const primes = arr.filter(function(number) {
    if (number < 2) {
      return false;
    }
    for (let i = 2; i < number; i++) {
      if (number % i === 0) {
        return false;
      }
    }
    return true;
  });

  console.log(primes);
})(numbers);

5),Return all the palindromes in an array
Anonymous Function:-
const words = ["level", "hello", "radar", "world", "madam"];

const getPalindromes = function(arr) {
  const palindromes = arr.filter(function(word) {
    const reversed = word.split("").reverse().join("");
    return word === reversed;
  });

  return palindromes;
};

const result = getPalindromes(words);
console.log(result);

IIFE :-
const words = ["level", "hello", "radar", "world", "madam"];

(function(arr) {
  const palindromes = arr.filter(function(word) {
    const reversed = word.split("").reverse().join("");
    return word === reversed;
  });

  console.log(palindromes);
})(words);

6),Return median of two sorted arrays of the same size

Anonymous Function:-
const arr1 = [1, 3, 5];
const arr2 = [2, 4, 6];

const getMedian = function(nums1, nums2) {
  const merged = nums1.concat(nums2);
  const sorted = merged.sort((a, b) => a - b);
  const mid = Math.floor(sorted.length / 2);
  
  if (sorted.length % 2 === 0) {
    return (sorted[mid - 1] + sorted[mid]) / 2;
  } else {
    return sorted[mid];
  }
};

const result = getMedian(arr1, arr2);
console.log(result);

IIFE:-
const arr1 = [1, 3, 5];
const arr2 = [2, 4, 6];

(function(nums1, nums2) {
  const merged = nums1.concat(nums2);
  const sorted = merged.sort((a, b) => a - b);
  const mid = Math.floor(sorted.length / 2);
  
  if (sorted.length % 2 === 0) {
    console.log((sorted[mid - 1] + sorted[mid]) / 2);
  } else {
    console.log(sorted[mid]);
  }
})(arr1, arr2);
7),Remove duplicates from an array
Anonymous Function:-
const array = [1, 2, 3, 3, 4, 5, 5, 6];

const removeDuplicates = function(arr) {
  const uniqueArray = [...new Set(arr)];
  return uniqueArray;
};

const result = removeDuplicates(array);
console.log(result);

IIFE:-
const array = [1, 2, 3, 3, 4, 5, 5, 6];

(function(arr) {
  const uniqueArray = [...new Set(arr)];
  console.log(uniqueArray);
})(array);

8),Rotate an array by k times
Anonymous Function:-
const array = [1, 2, 3, 4, 5];
const k = 3;

const rotateArray = function(arr, k) {
  const rotations = k % arr.length;
  const rotatedArray = [...arr.slice(rotations), ...arr.slice(0, rotations)];
  return rotatedArray;
};

const result = rotateArray(array, k);
console.log(result);

IIFE:-
const array = [1, 2, 3, 4, 5];
const k = 3;

(function(arr, k) {
  const rotations = k % arr.length;
  const rotatedArray = [...arr.slice(rotations), ...arr.slice(0, rotations)];
  console.log(rotatedArray);
})(array, k);
--------------------------------------------------------------------------------------------
Do the below programs in arrow functions.
a.Print odd numbers in an array
const numbers = [1, 2, 3, 4, 5];

const printOddNumbers = (arr) => {
  arr.forEach((number) => {
    if (number % 2 !== 0) {
      console.log(number);
    }
  });
};

printOddNumbers(numbers);
b.Convert all the strings to title caps in a string array

const strings = ["hello", "world", "javascript", "programming"];

const convertToTitleCaps = (arr) => {
  const titleCapsArray = arr.map((string) => {
    return string.charAt(0).toUpperCase() + string.slice(1);
  });
  
  return titleCapsArray;
};

const result = convertToTitleCaps(strings);
console.log(result);
c.Sum of all numbers in an array
const numbers = [1, 2, 3, 4, 5];

const sumOfNumbers = (arr) => {
  return arr.reduce((sum, number) => sum + number, 0);
};

const result = sumOfNumbers(numbers);
console.log(result);
d.Return all the prime numbers in an array

const numbers = [2, 3, 4, 5, 6, 7, 8, 9];

const getPrimeNumbers = (arr) => {
  const primes = arr.filter((number) => {
    if (number < 2) {
      return false;
    }
    for (let i = 2; i < number; i++) {
      if (number % i === 0) {
        return false;
      }
    }
    return true;
  });

  return primes;
};

const result = getPrimeNumbers(numbers);
console.log(result);
 
e.Return all the palindromes in an array

const words = ["level", "hello", "radar", "world", "madam"];

const getPalindromes = (arr) => {
  const palindromes = arr.filter((word) => {
    const reversed = word.split("").reverse().join("");
    return word === reversed;
  });

  return palindromes;
};

const result = getPalindromes(words);
console.log(result);







